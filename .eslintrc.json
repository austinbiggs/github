{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "jest": true,
    "shared-node-browser": true
  },
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "plugin:chai-expect/recommended",
    "plugin:security/recommended",
    "plugin:testing-library/react",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "ignorePatterns": ["dist/", "generated/", "vendor/"],
  "overrides": [
    {
      "files": ["**/*.spec.ts", "**/*.spec.tsx"],
      "rules": {
        "i18next/no-literal-string": 0
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "chai-expect",
    "chai-friendly",
    "i18next",
    "import",
    "jsx-a11y",
    "no-loops",
    "react",
    "react-hooks",
    "security",
    "testing-library",
    "@typescript-eslint"
  ],
  "rules": {
    "arrow-body-style": "off",
    "default-case": "off",
    "func-names": "off",
    "no-loops/no-loops": 2,
    "no-unused-expressions": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "mjs": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/named": "off",
    "import/namespace": "off",
    "import/default": "off",
    "import/no-named-as-default-member": "off",
    "import/no-cycle": "off",
    "no-undef": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "warn",
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [".jsx", ".tsx"]
      }
    ],
    "react/destructuring-assignment": "off",
    "react/prop-types": "off",
    "indent": "off",
    "@typescript-eslint/indent": "off",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "unknown",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always"
      }
    ],
    "import/prefer-default-export": "off",
    "no-console": [
      "error",
      {
        "allow": [
          "assert",
          "clear",
          "count",
          "countReset",
          "dir",
          "dirxml",
          "error",
          "exception",
          "group",
          "groupCollapsed",
          "groupEnd",
          "profile",
          "profileEnd",
          "table",
          "timetimeStamp",
          "warn"
        ]
      }
    ],
    "array-callback-return": "warn",
    "class-methods-use-this": "warn",
    "consistent-return": "warn",
    "global-require": "warn",
    "max-classes-per-file": "warn",
    "new-cap": "warn",
    "no-alert": "warn",
    "no-async-promise-executor": "warn",
    "no-case-declarations": "warn",
    "no-continue": "warn",
    "no-empty-pattern": "warn",
    "no-fallthrough": "warn",
    "no-global-assign": "warn",
    "no-multi-str": "warn",
    "no-nested-ternary": "warn",
    "no-param-reassign": "warn",
    "no-plusplus": "warn",
    "no-prototype-builtins": "warn",
    "no-restricted-globals": "warn",
    "no-restricted-syntax": "warn",
    "no-return-assign": "warn",
    "no-script-url": "warn",
    "no-self-compare": "warn",
    "no-shadow": "warn",
    "no-throw-literal": "warn",
    "no-underscore-dangle": "warn",
    "no-unreachable": "warn",
    "no-useless-concat": "warn",
    "no-useless-constructor": "warn",
    "no-useless-escape": "warn",
    "prefer-const": "warn",
    "prefer-promise-reject-errors": "warn",
    "vars-on-top": "warn",
    "chai-expect/missing-assertion": "warn",
    "chai-expect/no-inner-compare": "warn",
    "chai-expect/no-inner-literal": "warn",
    "chai-friendly/no-unused-expressions": "warn",
    "i18next/no-literal-string": [
      "warn",
      {
        "markupOnly": true,
        "ignore": ["^[^A-Za-z]*$"],
        "onlyAttribute": [
          "label",
          "ariaLabel",
          "aria-label",
          "text",
          "alt",
          "title",
          "placeholder",
          "heading"
        ]
      }
    ],
    "import/no-dynamic-require": "warn",
    "import/no-extraneous-dependencies": "warn",
    "import/no-mutable-exports": "warn",
    "jsx-a11y/accessible-emoji": "warn",
    "jsx-a11y/alt-text": "warn",
    "jsx-a11y/anchor-is-valid": "warn",
    "jsx-a11y/click-events-have-key-events": "warn",
    "jsx-a11y/control-has-associated-label": "warn",
    "jsx-a11y/iframe-has-title": "warn",
    "jsx-a11y/img-redundant-alt": "warn",
    "jsx-a11y/interactive-supports-focus": "warn",
    "jsx-a11y/label-has-associated-control": "warn",
    "jsx-a11y/mouse-events-have-key-events": "warn",
    "jsx-a11y/no-noninteractive-element-interactions": "warn",
    "jsx-a11y/no-noninteractive-tabindex": "warn",
    "jsx-a11y/no-static-element-interactions": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "warn",
    "react/button-has-type": "warn",
    "react/jsx-no-bind": "warn",
    "react/jsx-no-target-blank": "warn",
    "react/jsx-props-no-spreading": "warn",
    "react/no-access-state-in-setstate": "warn",
    "react/no-array-index-key": "warn",
    "react/no-children-prop": "warn",
    "react/no-danger": "warn",
    "react/no-did-update-set-state": "warn",
    "react/no-find-dom-node": "warn",
    "react/no-string-refs": "warn",
    "react/no-this-in-sfc": "warn",
    "react/no-unescaped-entities": "warn",
    "react/no-unused-state": "warn",
    "react/prefer-stateless-function": "warn",
    "react/sort-comp": [
      "warn",
      {
        "order": ["static-methods", "lifecycle", "render", "everything-else"]
      }
    ],
    "react/static-property-placement": "warn",
    "security/detect-non-literal-fs-filename": "warn",
    "security/detect-non-literal-regexp": "warn",
    "security/detect-non-literal-require": "warn",
    "security/detect-object-injection": "warn",
    "security/detect-unsafe-regex": "warn",
    // This rule has been replaced by naming-convention
    // More info here: https://github.com/typescript-eslint/typescript-eslint/releases/tag/v3.0.0
    // "@typescript-eslint/camelcase": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-namespace": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-var-requires": "warn"
  },
  "settings": {
    "react": {
      "createClass": "createReactClass",
      "pragma": "React",
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx", ".d.ts"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".d.ts", ".ts", ".tsx"],
        "moduleDirectory": ["frontend", "node_modules"]
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  }
}
